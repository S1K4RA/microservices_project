version: "3.7"
services:
  elasticsearch:
      build: 
        dockerfile: DockerFile
        context: elasticsearch
      volumes:
        - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      ports:
        - "9200:9200"
        - "9300:9300"
      environment:
        - "cluster.name=elasticsearch"
        - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
        - "XPACK_SECURITY_ENABLED=false"
      networks:
        - elk
      healthcheck:
        test: "curl http://elasticsearch:9200"
        interval: "1s"
        timeout: "3s"
        retries: 60
  flask_app:
    build: 
      dockerfile: DockerFile
      context: app
    environment:
      - REDIS_URL=redis
      - REDIS_PORT=6379
    ports:
      - "5000:5000"
    networks:
        - elk
    depends_on: 
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
      db:
        condition: service_started
    
  
  worker:
    build:
      dockerfile: DockerFile
      context: worker
    user: nobody
    depends_on:
      - redis
      - flask_app
    networks:
        - elk
  redis:
    container_name: redis
    image: redis:5.0.5
    hostname: redis
    ports:
      - '6379:6379'
    networks:
        - elk
  db:
    image: mysql
    command: --default-authentication-plugin=caching_sha2_password
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    cap_add:
      - SYS_NICE
    volumes:
      - ./db:/docker-entrypoint-initdb.d/:ro
    networks:
        - elk
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8080:80"
    networks:
        - elk
networks:
  elk:
    driver: bridge
